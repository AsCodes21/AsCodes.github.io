<!doctype html>
<html lang="en">
    <head>
        <!-- Required meta tags -->
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <link rel="icon" type="image/x-icon" href="./icons/apple-touch-icon.png">
        <!-- Bootstrap CSS -->
        <link rel="stylesheet" href="style.css">
        <link rel="stylesheet" href="prism.css">
        <script src="prism.js"></script>
        <link
            href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css"
            rel="stylesheet"
            integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3"
            crossorigin="anonymous">

        <title>My Codes</title>
    </head>
    <body>
        <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
            <div class="container-fluid">
                <a class="navbar-brand" href="#"><img src = "Logo.png" style = "width:62px;margin-bottom:3px;margin-right:10px">AsCodes(My Codes)</a>
                <button class="navbar-toggler" type="button"
                    data-bs-toggle="collapse"
                    data-bs-target="#navbarSupportedContent"
                    aria-controls="navbarSupportedContent" aria-expanded="false"
                    aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse"
                    id="navbarSupportedContent">
                    <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                        <li class="nav-item">
                            <a class="nav-link active" aria-current="page"
                                href="./index.htm">Home</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="./About.htm">About me</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="./Contact me.htm">Contact me</a>
                        </li>
                                                <li class="nav-item">
                <a class="nav-link" href="./Blogs.htm">Blogs</a>
              </li>
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                              Dropdown
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="navbarDropdown">
                              <li><a class="dropdown-item" href="./MyCodes.htm">My Codes</a></li>
                              <li><a class="dropdown-item" href="https://www.youtube.com" target="_blank">My Yt Channel</a></li>
                              <li><a class="dropdown-item" href="https://getbootstrap.com/docs/5.1/getting-started/introduction/"Open Bootstrap target="_blank"</a>Open Bootstrap</li>
                              <li><hr class="dropdown-divider"></li>
                              <li><a class="dropdown-item" href="mailto:anmolsinha345@gmail.com? subject = 'Your subject' "target="_blank">Mail me</a></li>
                            </ul>
                          </li>
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle" href="#"
                                id="navbarDropdown" role="button"
                                data-bs-toggle="dropdown" aria-expanded="false">
                                Select language
                            </a>
                            <ul class="dropdown-menu"
                                aria-labelledby="navbarDropdown">
                                <li><a class="dropdown-item" href="./Web-Dev.htm">Web-Developement</a></li>
                                <!-- <li><a class="dropdown-item" href="./MyCodesCss.htm">CSS</a></li>
                                <li><a class="dropdown-item" href="./MyCodesJs.htm">JavaScript</a></li> -->
                                <li><a class="dropdown-item" href="./MyCodesJs.htm">Python ðŸ—¸</a></li>
                                <li><a class="dropdown-item" href="./LearnMongo.htm">MongoDB</a></li>
                                <li><hr class="dropdown-divider"></li>
                                <li><a class="dropdown-item" href="./AsCodes.htm">Home</a></li>
                            </ul>
                        </li>
                        <!-- <li class="nav-item">
                <a class="nav-link disabled">Disabled</a>
              </li> -->
                    </ul>
                </div>
            </div>
        </nav>
        
        <h1 id = Lang>My Python Codes</h1>
        <a class="btn btn-outline-dark" data-bs-toggle="offcanvas" href="#offcanvasExample" role="button" aria-controls="offcanvasExample" style = "margin-left:10px;">
            More About Python
          </a>          
          <div class="offcanvas offcanvas-start" tabindex="-1" id="offcanvasExample" aria-labelledby="offcanvasExampleLabel">
            <div class="offcanvas-header">
              <h5 class="offcanvas-title" id="offcanvasExampleLabel">More About Python</h5>
              <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
            </div>
            <div class="offcanvas-body">
              <div>
                Here you can learn python with me as a Cheat Sheet of python is being creating and many other modules will uploaded here soon.
              </div>
              <div class="dropdown mt-3">
                <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown">
                  More
                </button>
                <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                  <li><a class="dropdown-item" href="./LearnPython.htm">Learn Python with me</a></li>
                  <li><a class="dropdown-item" href="./MyCodesPython.htm">Python Source Code ðŸ—¸</a></li>
                  <!-- <li><a class="dropdown-item" href="#">Something else here</a></li> -->
                </ul>
              </div>
            </div>
          </div>
        <ol class = containe>
            <li>
                <b>Python first code</b>-Hello World in Python 
                <pre class = "language-python"><code>print("Hello World")</code></pre>
            </li>
            <li>
                <b>Alarm.py</b>-Alarm made in python. 
                <pre class = "language-python"><code>#Importing needed modules
from datetime import datetime 
from playsound import playsound

#Adding no. of repeating alarm and timer of alarm
Repeat = int(input("Enter how many times do you want to repeat your alarm:\n"))
Eh = int(input("Enter your hour:\n"))
pmam = (input("Enter pm or am:\n")).lower()

#Adding login of am and pm.
if pmam == 'pm':
    Eh = Eh+12
Em = int(input("Enter your minute:\n"))
Es = int(input("Enter your second:\n"))

#Turning timer into a list
b = [Eh,Em,Es]

#Displaying our alarm
print(f'Your alarm for {Eh}:{Em}:{Es} is set.')

#Starting a loop that will check when the current time meets the alarm
while True:
    base = datetime.now()
    hour = base.hour
    minute = base.minute
    second = base.second
    a = [hour,minute,second]
    
    #Adding condition when timer meets
    if a==b:
        #A statement in terminal.
        print("Your timer is activated now.")
        #Repeating our alarm by desired number of times.
        for i in range(Repeat):
            #Your choice sound path.
            playsound('Your File Path')    
        #Break the loop after finishing.
        break</code></pre>
            </li>
            <li>
                <b>TicTacToe.py</b>-Best childhood game for 2 players.
                <pre class = "language-python"><code>
import time
from plyer import notification

#Starting a infinite loop.
while True:
    #Using notification features.
    notification.notify(
        #Your title
        title = "Drink Water",
        #Your message
        message = "According to research you should drink water after every 1 hour.",
        #Your choice logo
        app_icon= "Your Icon.jpg",
        #Time when message will disappear
        timeout = 20,
    )   
    #Duration between two messages.
    time.sleep(60*60)
</code></pre>
            </li>
            <li>
                <b>Alarm.py</b>-Alarm made in python. 
                <pre class = "language-python"><code>board = [
                    ["#","#","#"],
                    ["#","#","#"],
                    ["#","#","#"]
                ]
                
                def checkTie():
                    if "#" not in board[0] and "#" not in board[1] and "#" not in board[2]:
                        print("This is a tie.")
                        return True
                
                def displayBoard():
                    print(f'''
                    {board[0][0]}|{board[0][1]}|{board[0][2]}
                    ------
                    {board[1][0]}|{board[1][1]}|{board[1][2]}
                    ------
                    {board[2][0]}|{board[2][1]}|{board[2][2]}
                    ''')
                
                def updateMove(r,c,p):
                    board[r-1][c-1] = p   
                
                def allowedCheck(r,c):
                    return board[r-1][c-1] == "#"
                
                displayBoard()
                
                def user1Turn():
                    print("User 1 turn (O)")
                    try:
                        u1Row = int(input("Enter row number:\n"))
                        u1Column = int(input("Enter column number:\n"))
                        if(allowedCheck(u1Row,u1Column)):
                            updateMove(u1Row,u1Column,"O")
                        else:
                            print("Invalid input try again.")
                            displayBoard()
                            user1Turn()
                    except:
                            print("Invalid input try again.")
                            displayBoard()
                            user1Turn()
                
                def user2Turn():
                    print("User 2 turn (X)")
                    try:
                        u2Row = int(input("Enter row number:\n"))
                        u2Column = int(input("Enter column number:\n"))
                        if(allowedCheck(u2Row,u2Column)):
                            updateMove(u2Row,u2Column,"X")
                        else:
                            print("Invalid input try again.")
                            displayBoard()
                            user2Turn()
                    except:
                            print("Invalid input try again.")
                            displayBoard()
                            user2Turn()
                
                def checkUser2win():
                    if board[0][0] == "X" and board[0][1] == "X" and  board[0][2] == "X":
                        print("User 2 (X) won!")
                        return True
                    elif board[1][0] == "X" and  board[1][1] == "X" and board[1][2] == "X":
                        print("User 2 (X) won!")
                        return True
                    elif board[2][0] == "X" and board[2][1] == "X" and board[2][2] == "X":    
                        print("User 2 (X) won!")
                        return True  
                    elif board[0][0] == "X" and  board[1][0] == "X" and board[2][0] == "X":
                        print("User 2 (X) won!")
                        return True
                    elif board[0][1] == "X" and  board[1][1] == "X" and board[2][1] == "X":
                        print("User 2 (X) won!")
                        return True
                    elif board[0][2] == "X" and  board[1][2] == "X" and board[2][2] == "X":
                        print("User 2 (X) won!")
                        return True
                    elif board[0][0] == "X" and board[1][1] == "X" and board[2][2] == "X":
                        print("User 2 (X) won!")
                        return True
                    elif board[0][2] == "X" and board[1][1] == "X" and board[2][0] == "X":
                        print("User 2 (X) won!") 
                        return True
                    else:
                        return False
                
                
                def checkUser1win():
                    if board[0][0] == "O" and board[0][1] == "O" and  board[0][2] == "O":
                        print("User 1 (O) won!")
                        return True
                    elif board[1][0] == "O" and  board[1][1] == "O" and board[1][2] == "O":
                        print("User 1 (O) won!")
                        return True
                    elif board[2][0] == "O" and board[2][1] == "O" and board[2][2] == "O":    
                        print("User 1 (O) won!")
                        return True   
                    elif board[0][0] == "O" and  board[1][0] == "O" and board[2][0] == "O":
                        print("User 1 (O) won!")
                        return True
                    elif board[0][1] == "O" and  board[1][1] == "O" and board[2][1] == "O":
                        print("User 1 (O) won!")
                        return True
                    elif board[0][2] == "O" and  board[1][2] == "O" and board[2][2] == "O":
                        print("User 1 (O) won!")
                        return True
                    elif board[0][0] == "O" and board[1][1] == "O" and board[2][2] == "O":
                        print("User 1 (O) won!")
                        return True
                    elif board[0][2] == "O" and board[1][1] == "O" and board[2][0] == "O":
                        print("User 1 (O) won!") 
                        return True
                    else:
                        return False
                
                    
                
                while True:   
                
                    user1Turn()
                
                    if (checkUser1win()):
                        displayBoard()        
                        break
                    
                    if (checkTie()):
                        displayBoard()
                        break
                
                    displayBoard() 
                
                    user2Turn()
                
                    if(checkUser2win()):
                        displayBoard()        
                        break  
                    displayBoard() 
                
                print("Thanks for playing!!")</code></pre>
            </li>            
        </ol>

        <!-- Optional JavaScript; choose one of the two! -->

        <!-- Option 1: Bootstrap Bundle with Popper -->
        <script
            src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p"
            crossorigin="anonymous"></script>

        <!-- Option 2: Separate Popper and Bootstrap JS -->
        <!--
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.10.2/dist/umd/popper.min.js" integrity="sha384-7+zCNj/IqJ95wo16oMtfsKbZ9ccEh31eOz1HGyDuCQ6wgnyJNSYdrPa03rtR1zdB" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.min.js" integrity="sha384-QJHtvGhmr9XOIpI6YVutG+2QOK9T+ZnN4kzFN1RtK3zEFEIsxhlmWl5/YESvpZ13" crossorigin="anonymous"></script>
    -->
    </body>
</html>
