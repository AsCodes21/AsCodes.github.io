<!doctype html>
<html lang="en">
  <head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="icon" type="image/x-icon" href="./icons/apple-touch-icon.png">
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="style.css">
    <link rel="stylesheet" href="prism.css">
    <script src="prism.js"></script>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3"
      crossorigin="anonymous">

    <title>My Codes</title>
  </head>
  <body>
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
      <div class="container-fluid">
        <a class="navbar-brand" href="#"><img src="Logo.png" style="width:62px;margin-bottom:3px;margin-right:10px">AsCodes(My
          Codes)</a>
        <button class="navbar-toggler" type="button"
          data-bs-toggle="collapse"
          data-bs-target="#navbarSupportedContent"
          aria-controls="navbarSupportedContent" aria-expanded="false"
          aria-label="Toggle navigation">
          <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse"
          id="navbarSupportedContent">
          <ul class="navbar-nav me-auto mb-2 mb-lg-0">
            <li class="nav-item">
              <a class="nav-link active" aria-current="page"
                href="./index.htm">Home</a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="./About.htm">About me</a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="./Contact me.htm">Contact me</a>
            </li>
              <li class="nav-item">
                <a class="nav-link" href="./Blogs.htm">Blogs</a>
              </li>
            <li class="nav-item dropdown">
              <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown"
                role="button" data-bs-toggle="dropdown" aria-expanded="false">
                Dropdown
              </a>
              <ul class="dropdown-menu" aria-labelledby="navbarDropdown">
                <li><a class="dropdown-item" href="./MyCodes.htm">My Codes</a></li>
                <li><a class="dropdown-item" href="https://www.youtube.com"
                    target="_blank">My Yt Channel</a></li>
                <li><a class="dropdown-item"
                    href="https://getbootstrap.com/docs/5.1/getting-started/introduction/"
                    Open Bootstrap target="_blank"</a>Open Bootstrap</li>
              <li><hr class="dropdown-divider"></li>
              <li><a class="dropdown-item" href="mailto:anmolsinha345@gmail.com?
                  subject= 'Your subject'"target="_blank">Mail me</a></li>
            </ul>
          </li>
          <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle" href="#"
              id="navbarDropdown" role="button"
              data-bs-toggle="dropdown" aria-expanded="false">
              Select language
            </a>
            <ul class="dropdown-menu"
              aria-labelledby="navbarDropdown">
              <li><a class="dropdown-item" href="./Web-Dev.htm">Web-Developement
                </a></li>
              <!-- <li><a class="dropdown-item" href="./MyCodesCss.htm">CSS</a></li>
                                <li><a class="dropdown-item" href="./MyCodesJs.htm">JavaScript</a></li> -->
              <li><a class="dropdown-item" href="./MyCodesJs.htm">Python ðŸ—¸</a></li>
              <li><hr class="dropdown-divider"></li>
              <li><a class="dropdown-item" href="./AsCodes.htm">Home</a></li>
            </ul>
          </li>
          <!-- <li class="nav-item">
                <a class="nav-link disabled">Disabled</a>
              </li> -->
        </ul>

      </div>
    </div>
  </nav>

  <h1 id= Lang>My Python Codes</h1>
  <a class="btn btn-outline-dark" data-bs-toggle="offcanvas"
    href="#offcanvasExample" role="button" aria-controls="offcanvasExample"
    style="margin-left:10px;">
    More About Python
  </a>
  <div class="offcanvas offcanvas-start" tabindex="-1" id="offcanvasExample"
    aria-labelledby="offcanvasExampleLabel">
    <div class="offcanvas-header">
      <h5 class="offcanvas-title" id="offcanvasExampleLabel">More About Python</h5>
      <button type="button" class="btn-close text-reset"
        data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body">
      <div>
        Here you can learn python with me as a Cheat Sheet of python is being
        creating and many other modules will uploaded here soon and you can also
        get my source codes.
      </div>
      <div class="dropdown mt-3">
        <button class="btn btn-secondary dropdown-toggle" type="button"
          id="dropdownMenuButton" data-bs-toggle="dropdown">
          More
        </button>
        <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">
          <li><a class="dropdown-item" href="./LearnPython.htm">Learn Python
              with me ðŸ—¸</a></li>
          <li><a class="dropdown-item" href="./MyCodesPython.htm">Python Source
              Code </a></li>
          <!-- <li><a class="dropdown-item" href="#">Something else here</a></li> -->
        </ul>
      </div>
    </div>
  </div>
  <ol>
    <li>
      <b>Python first code</b>-Hello World in Python
      <pre class="language-python"><code>print("Hello World")</code></pre>
    </li>
  </ol>
  <div>
    <p>Basic syntax from the python programming language</p>
    <h3>Showing Output To User</h3>
    <p>the print function is used to display or print output</p>
    <pre class="language-python"><code>print("Content that you wanna print on screen")</code></pre>
    <h3>Taking Input From User</h3>
    <p>the input function is used to take input from the user</p>
    <pre class="language-python"><code>var1 = input("Enter your name: ")</code></pre>
    <h3>Empty List</h3>
    <p>This method allows you to create an empty list</p>
    <pre class="language-python"><code>my_list = []</code></pre>
    <h3>Empty Dictionary</h3>
    <p>By putting two curly braces, you can create a blank dictionary</p>
    <pre class="language-python"><code>my_dict = {}</code></pre>
    <h3>Range Function</h3>
    <p>range function returns a sequence of numbers, eg, numbers starting from 0
      to n-1 for range(0, n)</p>
    <pre class="language-python"><code>range(int_value)</code></pre>
    <p></p></div><div><div>
      <h2>Comments</h2>
      <p>Comments are used to make the code more understandable for programmers,
        and they are not executed by compiler or interpreter.</p>
      <h3>Single line comment</h3>
      <pre class="language-python"><code>#This is a single line comment</code></pre>
      <h3>Multi-line comment</h3>
      <pre class="language-python"><code>'''This is a
multi-line
comment'''</code></pre>
      <h2>Escape Sequence</h2>
      <p>An escape sequence is a sequence of characters; it doesn't represent
        itself when used inside string literal or character.</p>
      <h3>Newline</h3>
      <p>Newline Character</p>
      <pre class="language-python"><code>\n</code></pre>
      <h3>Backslash</h3>
      <p>It adds a backslash</p>
      <pre class="language-python"><code>\\</code></pre>
      <h3>Single Quote</h3>
      <p>It adds a single quotation mark</p>
      <pre class="language-python"><code>\'</code></pre>
      <h3>Tab</h3>
      <p>It gives a tab space</p>
      <pre class="language-python"><code>\t</code></pre>
      <h3>Backspace</h3>
      <p>It adds a backspace</p>
      <pre class="language-python"><code>\b</code></pre>
      <h3>Octal value</h3>
      <p>It represents the value of an octal number</p>
      <pre class="language-python"><code>\ooo</code></pre>
      <h3>Hex value</h3>
      <p>It represents the value of a hex number</p>
      <pre class="language-python"><code>\xhh</code></pre>
      <h3>Carriage Return</h3>
      <p>Carriage return or \r is a unique feature of Python. \r will just work
        as you have shifted your cursor to the beginning of the string or line.</p>
      <pre class="language-python"><code>\r</code></pre>
      <p></p></div><app-adsense adtype="ad" _nghost-sc50=""><div
        _ngcontent-sc50="" class="text-center"><div _ngcontent-sc50=""
          class="text-center"><ins _ngcontent-sc50=""
            data-ad-client="ca-pub-9655830461045889" data-ad-slot="7409118598"
            class="adsbygoogle" style="display: inline-block; width: 250px;
            height: 200px;"></ins></div><!----><!----><!----><!----></div></app-adsense></div><div><div>
      <h2>Strings</h2>
      <p>Python string is a sequence of characters, and each character can be
        individually accessed. Using its index.</p>
      <h3>String</h3>
      <p>You can create Strings by enclosing text in both forms of quotes -
        single quotes or double-quotes.</p>
      <pre class="language-python"><code>variable_name = "String Data"</code></pre>
      <h3>Slicing</h3>
      <p>Slicing refers to obtaining a sub-string from the given string.</p>
      <pre class="language-python"><code>var_name[n : m]</code></pre>
      <h3>String Methods isalnum() method</h3>
      <p>Returns True if all characters in the string are alphanumeric</p>
      <pre class="language-python"><code>string_variable.isalnum()</code></pre>
      <h3>isalpha() method</h3>
      <p>Returns True if all characters in the string are alphabet</p>
      <pre class="language-python"><code>string_variable.isalpha()</code></pre>
      <h3>isdecimal() method</h3>
      <p>Returns True if all characters in the string are decimals</p>
      <pre class="language-python"><code>string_variable.isdecimal()</code></pre>
      <h3>isdigit() method</h3>
      <p>Returns True if all characters in the string are digits</p>
      <pre class="language-python"><code>string_variable.isdigit()</code></pre>
      <h3>islower() method</h3>
      <p>Returns True if all characters in the string are lower case</p>
      <pre class="language-python"><code>string_variable.islower()</code></pre>
      <h3>isspace() method</h3>
      <p>Returns True if all characters in the string are whitespaces</p>
      <pre class="language-python"><code>string_variable.isspace()</code></pre>
      <h3>isupper() method</h3>
      <p>Returns True if all characters in the string are upper case</p>
      <pre class="language-python"><code>string_variable.isupper()</code></pre>
      <h3>lower() method</h3>
      <p>Converts a string into lower case</p>
      <pre class="language-python"><code>string_variable.lower()</code></pre>
      <h3>upper() method</h3>
      <p>Converts a string into upper case</p>
      <pre class="language-python"><code>string_variable.upper()</code></pre>
      <h3>strip() method</h3>
      <p>It removes leading and trailing spaces in the string</p>
      <pre class="language-python"><code>string_variable.strip()</code></pre>
      <h2>List</h2>
      <p>A List in Python represents a list of comma-separated values of any
        data type between square brackets.</p>
      <h3>List</h3>
      <pre class="language-python"><code>var_name = [element1, element2, and so on]</code></pre>
      <h3>List Methods index method</h3>
      <p>Returns the index of the first element with the specified value</p>
      <pre class="language-python"><code>list.index(element)</code></pre>
      <h3>append method</h3>
      <p>Adds an element at the end of the list</p>
      <pre class="language-python"><code>list.append(element)</code></pre>
      <h3>extend method</h3>
      <p>Add the elements of a list (or any iterable) to the end of the current
        list</p>
      <pre class="language-python"><code>list.extend(iterable)</code></pre>
      <h3>insert method</h3>
      <p>Adds an element at the specified position</p>
      <pre class="language-python"><code>list.insert(position, element)</code></pre>
      <h3>pop method</h3>
      <p>Removes the element at the specified position and returns it</p>
      <pre class="language-python"><code>list.pop(position)</code></pre>
      <h3>remove method</h3>
      <p>The remove( ) method removes the first occurrence of a given item from
        the list</p>
      <pre class="language-python"><code>list.remove(element)</code></pre>
      <h3>clear method</h3>
      <p>Removes all the elements from the list</p>
      <pre class="language-python"><code>list.clear()</code></pre>
      <h3>count method</h3>
      <p>Returns the number of elements with the specified value</p>
      <pre class="language-python"><code>list.count(value)</code></pre>
      <h3>reverse method</h3>
      <p>Reverse the order of the list</p>
      <pre class="language-python"><code>list.reverse()</code></pre>
      <h3>sort method</h3>
      <p>Sorts the list</p>
      <pre class="language-python"><code>list.sort(reverse=True|False)</code></pre>
      <p></p></div><app-adsense adtype="ad" _nghost-sc50=""><div
        _ngcontent-sc50="" class="text-center"><div _ngcontent-sc50=""
          class="text-center"><ins _ngcontent-sc50=""
            data-ad-client="ca-pub-9655830461045889" data-ad-slot="7409118598"
            class="adsbygoogle" style="display: inline-block; width: 250px;
            height: 200px;"></ins></div><!----><!----><!----><!----></div></app-adsense></div><div><div>
      <h2>Tuples</h2>
      <p>Tuples are represented as a list of comma-separated values of any data
        type within parentheses.</p>
      <h3>Tuple Creation</h3>
      <pre class="language-python"><code>variable_name = (element1, element2, ...)</code></pre>
      <h3>Tuple Methods count method</h3>
      <p>It returns the number of times a specified value occurs in a tuple</p>
      <pre class="language-python"><code>tuple.count(value)</code></pre>
      <h3>index method</h3>
      <p>It searches the tuple for a specified value and returns the position.</p>
      <pre class="language-python"><code>tuple.index(value)</code></pre>
      <h2>Sets</h2>
      <p>A set is a collection of multiple values which is both unordered and
        unindexed. It is written in curly brackets.</p>
      <h3>Set Creation: Way 1</h3>
      <pre class="language-python"><code>var_name = {element1, element2, ...}</code></pre>
      <h3>Set Creation: Way 2</h3>
      <pre class="language-python"><code>var_name = set([element1, element2, ...])</code></pre>
      <h3>Set Methods: add() method</h3>
      <p>Adds an element to a set</p>
      <pre class="language-python"><code>set.add(element)</code></pre>
      <h3>clear() method</h3>
      <p>Remove all elements from a set</p>
      <pre class="language-python"><code>set.clear()</code></pre>
      <h3>discard() method</h3>
      <p>Removes the specified item from the set</p>
      <pre class="language-python"><code>set.discard(value)</code></pre>
      <h3>intersection() method</h3>
      <p>Returns intersection of two or more sets</p>
      <pre class="language-python"><code>set.intersection(set1, set2 ... etc)</code></pre>
      <h3>issubset() method</h3>
      <p>Checks if a Set is Subset of Another Set</p>
      <pre class="language-python"><code>set.issubset(set)</code></pre>
      <h3>pop() method</h3>
      <p>Removes an element from the set</p>
      <pre class="language-python"><code>set.pop()</code></pre>
      <h3>remove() method</h3>
      <p>Removes the specified element from the Set</p>
      <pre class="language-python"><code>set.remove(item)</code></pre>
      <h3>union() method</h3>
      <p>Returns the union of Sets</p>
      <pre class="language-python"><code>set.union(set1, set2...)</code></pre>
      <p></p></div><app-adsense adtype="ad" _nghost-sc50=""><div
        _ngcontent-sc50="" class="text-center"><div _ngcontent-sc50=""
          class="text-center"><ins _ngcontent-sc50=""
            data-ad-client="ca-pub-9655830461045889" data-ad-slot="7409118598"
            class="adsbygoogle" style="display: inline-block; width: 250px;
            height: 200px;"></ins></div><!----><!----><!----><!----></div></app-adsense></div><div><div>
      <h2>Dictionaries</h2>
      <p>The dictionary is an unordered set of comma-separated key: value pairs,
        within {}, with the requirement that within a dictionary, no two keys
        can be the same.</p>
      <h3>Dictionary</h3>
      <pre class="language-python"><code>&lt;dictionary-name&gt; = {&lt;key&gt;: value, &lt;key&gt;: value ...}</code></pre>
      <h3>Adding Element to a dictionary</h3>
      <p>By this method, one can add new elements to the dictionary</p>
      <pre class="language-python"><code>&lt;dictionary&gt;[&lt;key&gt;] = &lt;value&gt;</code></pre>
      <h3>Updating Element in a dictionary</h3>
      <p>If the specified key already exists, then its value will get updated</p>
      <pre class="language-python"><code>&lt;dictionary&gt;[&lt;key&gt;] = &lt;value&gt;</code></pre>
      <h3>Deleting Element from a dictionary</h3>
      <p>del let to delete specified key: value pair from the dictionary</p>
      <pre class="language-python"><code>del &lt;dictionary&gt;[&lt;key&gt;]</code></pre>
      <h3>Dictionary Functions &amp; Methods len() method</h3>
      <p>It returns the length of the dictionary, i.e., the count of elements
        (key: value pairs) in the dictionary</p>
      <pre class="language-python"><code>len(dictionary)</code></pre>
      <h3>clear() method</h3>
      <p>Removes all the elements from the dictionary</p>
      <pre class="language-python"><code>dictionary.clear()</code></pre>
      <h3>get() method</h3>
      <p>Returns the value of the specified key</p>
      <pre class="language-python"><code>dictionary.get(keyname)</code></pre>
      <h3>items() method</h3>
      <p>Returns a list containing a tuple for each key-value pair</p>
      <pre class="language-python"><code>dictionary.items()</code></pre>
      <h3>keys() method</h3>
      <p>Returns a list containing the dictionary's keys</p>
      <pre class="language-python"><code>dictionary.keys()</code></pre>
      <h3>values() method</h3>
      <p>Returns a list of all the values in the dictionary</p>
      <pre class="language-python"><code>dictionary.values()</code></pre>
      <h3>update() method</h3>
      <p>Updates the dictionary with the specified key-value pairs</p>
      <pre class="language-python"><code>dictionary.update(iterable)</code></pre>
      <h2>Conditional Statements</h2>
      <p>The if statements are the conditional statements in Python, and these
        implement selection constructs (decision constructs).</p>
      <h3>if Statement</h3>
      <pre class="language-python"><code>if(conditional expression):
statements</code></pre>
      <h3>if-else Statement</h3>
      <pre class="language-python"><code>if(conditional expression):
statements
else:
statements</code></pre>
      <h3>if-elif Statement</h3>
      <pre class="language-python"><code>if (conditional expression) :
statements
elif (conditional expression) :
statements
else :
statements</code></pre>
      <h3>Nested if-else Statement</h3>
      <pre class="language-python"><code>if (conditional expression):
if (conditional expression):
statements
else:
statements
else:
statements</code></pre>
      <p></p></div><app-adsense adtype="ad" _nghost-sc50=""><div
        _ngcontent-sc50="" class="text-center"><div _ngcontent-sc50=""
          class="text-center"><ins _ngcontent-sc50=""
            data-ad-client="ca-pub-9655830461045889" data-ad-slot="7409118598"
            class="adsbygoogle" style="display: inline-block; width: 250px;
            height: 200px;"></ins></div><!----><!----><!----><!----></div></app-adsense></div><div><div>
      <h2>Iterative Statements</h2>
      <p>An iteration statement, or loop, repeatedly executes a statement, known
        as the loop body, until the controlling expression is false (0).</p>
      <h3>For Loop</h3>
      <p>The for loop of Python is designed to process the items of any
        sequence, such as a list or a string, one by one.</p>
      <pre class="language-python"><code>for &lt;variable&gt; in &lt;sequence&gt;:
statements_to_repeat</code></pre>
      <h3>While Loop</h3>
      <p>A while loop is a conditional loop that will repeat the instructions
        within itself as long as a conditional remains true.</p>
      <pre class="language-python"><code>while &lt;logical-expression&gt; :
loop-body</code></pre>
      <h3>Break Statement</h3>
      <p>The break statement enables a program to skip over a part of the code.
        A break statement terminates the very loop it lies within.</p>
      <pre class="language-python"><code>for &lt;var&gt; in &lt;sequence&gt; :
statement1
if &lt;condition&gt; :
break
statement2
statement_after_loop</code></pre>
      <h3>Continue Statement</h3>
      <p>The continue statement skips the rest of the loop statements and causes
        the next iteration to occur.</p>
      <pre class="language-python"><code>for &lt;var&gt; in &lt;sequence&gt; :
statement1
if &lt;condition&gt; :
continue
statement2
statement3
statement4</code></pre>
      <h2>Functions</h2>
      <p>A function is a block of code that performs a specific task. You can
        pass parameters into a function. It helps us to make our code more
        organized and manageable.</p>
      <h3>Function Definition</h3>
      <pre class="language-python"><code>def my_function(parameters):
# Statements</code></pre>
      <h2>File Handling</h2>
      <p>File handling refers to reading or writing data from files. Python
        provides some functions that allow us to manipulate data in the files.</p>
      <h3>open() function</h3>
      <pre class="language-python"><code>var_name = open("file name", "opening mode")</code></pre>
      <h3>close() function</h3>
      <pre class="language-python"><code>var_name.close()</code></pre>
      <h3>Read () function</h3>
      <p>The read functions contains different methods, read(),readline() and
        readlines()</p>
      <pre class="language-python"><code>read() #return one big string</code></pre>
      <p>It returns a list of lines</p>
      <pre class="language-python"><code>read-lines</code></pre>
      <p>It returns one line at a time</p>
      <pre class="language-python"><code>readline</code></pre>
      <h3>Write () function</h3>
      <p>This function writes a sequence of strings to the file.</p>
      <pre class="language-python"><code>write () #Used to write a fixed sequence of characters to a file</code></pre>
      <p>It is used to write a list of strings</p>
      <pre class="language-python"><code>writelines()</code></pre>
      <h3>Append () function</h3>
      <p>The append function is used to append to the file instead of
        overwriting it. To append to an existing file, simply open the file in
        append mode (a):</p>
      <pre class="language-python"><code>file = open("Hello.txt", "a")</code></pre>
      <h2>Exception Handling</h2>
      <p>An exception is an unusual condition that results in an interruption in
        the flow of the program.</p>
      <h3>try and except</h3>
      <p>A basic try-catch block in python. When the try block throws an error,
        the control goes to the except block.</p>
      <pre class="language-python"><code>try:
[Statement body block]
raise Exception()
except Exception as e:
[Error processing block]</code></pre>
      <h2>OOPS</h2>
      <p>It is a programming approach that primarily focuses on using objects
        and classes. The objects can be any real-world entities.</p>
      <h3>class</h3>
      <p>The syntax for writing a class in python</p>
      <pre class="language-python"><code>class class_name:
#Statements</code></pre>
      <h3>class with a constructor</h3>
      <p>The syntax for writing a class with the constructor in python</p>
      <pre class="language-python"><code>class CodeWithHarry:

# Default constructor
def __init__(self):
self.name = "CodeWithHarry"

# A method for printing data members
def print_me(self):
print(self.name)</code></pre>
      <h3>object</h3>
      <p>Instantiating an object</p>
      <pre class="language-python"><code>&lt;object-name&gt; = &lt;class-name&gt;(&lt;arguments&gt;)</code></pre>
      <h3>filter function</h3>
      <p>The filter function allows you to process an iterable and extract those
        items that satisfy a given condition</p>
      <pre class="language-python"><code>filter(function, iterable)</code></pre>
      <h3>issubclass function</h3>
      <p>Used to find whether a class is a subclass of a given class (classinfo)
        or not</p>
      <pre class="language-python"><code>issubclass(class, classinfo)</code></pre>
      <p></p></div><app-adsense adtype="ad" _nghost-sc50=""><div
        _ngcontent-sc50="" class="text-center"><div _ngcontent-sc50=""
          class="text-center"><ins _ngcontent-sc50=""
            data-ad-client="ca-pub-9655830461045889" data-ad-slot="7409118598"
            class="adsbygoogle" style="display: inline-block; width: 250px;
            height: 200px;"></ins></div><!----><!----><!----><!----></div></app-adsense></div><div><div>
      <h2>Iterators and Generators</h2>
      <p>Here are some of the advanced topics of the Python programming language
        like iterators and generators</p>
      <h3>Iterator</h3>
      <p>Used to create an iterator over an iterable</p>
      <pre class="language-python"><code>iter_list = iter(['Harry', 'Aakash', 'Rohan']) 
print(next(iter_list)) 
print(next(iter_list)) 
print(next(iter_list))</code></pre>
      <h3>Generator</h3>
      <p>Used to generate values on the fly</p>
      <pre class="language-python"><code># A simple generator function
def my_gen():
n = 1
print('This is printed first')
# Generator function contains yield statements
yield n
n += 1
print('This is printed second')
yield n
n += 1
print('This is printed at last')
yield n</code></pre>
      <h2>Decorators</h2>
      <p>Decorators are used to modifying the behavior of function or class.
        They are usually called before the definition of a function you want to
        decorate.</p>
      <h3>property Decorator (getter)</h3>
      <pre class="language-python"><code>@property
def name(self):
return self.__name</code></pre>
      <h3>setter Decorator</h3>
      <p>It is used to set the property 'name'</p>
      <pre class="language-python"><code>@name.setter
def name(self, value):
self.__name=value</code></pre>
      <h3>Deletor Decorator</h3>
      <p>It is used to delete the property 'name'</p>
      <pre class="language-python"><code>@name.deleter #property-name.deleter decorator
def name(self, value):
print('Deleting..')
del self.__name</code></pre>
      <p>&nbsp;</p>
    </div>
    <hr class="dropdown-divider">
    <a href = "#"><button class = "btn btn-danger">Go on top</button></a>

    <!-- Optional JavaScript; choose one of the two! -->

    <!-- Option 1: Bootstrap Bundle with Popper -->
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p"
      crossorigin="anonymous"></script>

    <!-- Option 2: Separate Popper and Bootstrap JS -->
    <!--
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.10.2/dist/umd/popper.min.js" integrity="sha384-7+zCNj/IqJ95wo16oMtfsKbZ9ccEh31eOz1HGyDuCQ6wgnyJNSYdrPa03rtR1zdB" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.min.js" integrity="sha384-QJHtvGhmr9XOIpI6YVutG+2QOK9T+ZnN4kzFN1RtK3zEFEIsxhlmWl5/YESvpZ13" crossorigin="anonymous"></script>
    -->
  </body>
</html>
